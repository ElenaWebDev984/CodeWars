// üéØ Sort and Star

//‚ùì DESCRIPTIONS
// You will be given a list of strings. You must sort it alphabetically (case-sensitive, and based on the ASCII values of the chars) and then return the first value.
//
//     The returned value must be a string, and have "***" between each of its letters.
//
//     You should not remove or add elements from/to the array.


// üìå TESTS
// assert.strictEqual(twoSort(["bitcoin", "take", "over", "the", "world", "maybe", "who", "knows", "perhaps"]), 'b***i***t***c***o***i***n' );
// assert.strictEqual(twoSort(["turns", "out", "random", "test", "cases", "are", "easier", "than", "writing", "out", "basic", "ones"]), 'a***r***e');


// ‚úÖ SOLUTIONS
// 1 variant
function twoSort(s) {
    const sorted = [...s].sort();

    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
    const first = sorted[0];

    // –†–∞–∑–¥–µ–ª—è–µ–º –±—É–∫–≤—ã –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    return first.split('').join('***');
}

// 2 variant
function twoSort(s) {
    return s.sort()[0].split('').join('***');
}


