// üéØ Parse nice int from char problem

//‚ùì DESCRIPTIONS
// You ask a small girl,"How old are you?" She always says, "x years old", where x is a random number between 0 and 9.

// Write a program that returns the girl's age (0-9) as an integer.

// Assume the test input string is always a valid string. For example, the test input may be "1 year old" or "5 years old". The first character in the string is always a number.

// üìå TESTS
//  assert.strictEqual(getAge("4 years old"), 4);
// assert.strictEqual(getAge("9 years old"), 9);
// assert.strictEqual(getAge("1 year old"), 1);  


// ‚úÖ SOLUTIONS
// 1 variant
function getAge(inputString) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∏–∑ –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const firstChar = inputString.charAt(0);
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    const age = parseInt(firstChar);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
    return age;
}

// 2 variant
function getAge(inputString){
    return parseInt(inputString);
  }

  // 3 variant
  function getAge(inputString){
    return +inputString[0];
  }
